{
  "name": "domain-watchdog",
  "author": {
    "name": "MaÃ«l Gangloff",
    "email": "contact@maelgangloff.fr"
  },
  "homepage": "https://github.com/maelgangloff/domain-watchdog",
  "readme": "https://github.com/maelgangloff/domain-watchdog",
  "keywords": [
    "Domain",
    "RDAP",
    "WHOIS"
  ],
  "bugs": {
    "url": "https://github.com/maelgangloff/domain-watchdog/issues"
  },
  "devDependencies": {
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.0",
    "@babel/preset-react": "^7.24.7",
    "@eslint/js": "^9.17.0",
    "@fontsource/noto-color-emoji": "^5.0.27",
    "@hotwired/stimulus": "^3.0.0",
    "@hotwired/turbo": "^7.1.1 || ^8.0",
    "@symfony/stimulus-bridge": "^3.2.0",
    "@symfony/ux-turbo": "file:vendor/symfony/ux-turbo/assets",
    "@symfony/webpack-encore": "^4.0.0",
    "@types/axios": "^0.14.0",
    "@types/dagre": "^0.7.52",
    "@types/jsonld": "^1.5.15",
    "@types/punycode": "^2.1.4",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/react-responsive": "^8.0.8",
    "@types/vcf": "^2.0.7",
    "@xyflow/react": "^12.1.0",
    "antd": "^5.19.3",
    "axios": "^1.7.2",
    "core-js": "^3.23.0",
    "dagre": "^0.8.5",
    "eslint": "^9.17.0",
    "eslint-plugin-react": "^7.37.3",
    "globals": "^15.14.0",
    "html-loader": "^5.1.0",
    "html-to-image": "^1.11.11",
    "jsonld": "^8.3.2",
    "punycode": "^2.3.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-responsive": "^10.0.0",
    "react-router-dom": "^6.25.1",
    "regenerator-runtime": "^0.13.9",
    "snarkdown": "^2.0.0",
    "ts-loader": "^9.5.1",
    "ttag": "^1.8.7",
    "ttag-cli": "^1.10.12",
    "typescript": "^5.5.3",
    "typescript-eslint": "^8.19.0",
    "vcf": "^2.1.2",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0",
    "webpack-notifier": "^1.15.0"
  },
  "license": "AGPL-3.0-or-later",
  "private": true,
  "scripts": {
    "dev-server": "encore dev-server",
    "dev": "encore dev",
    "watch": "encore dev --watch",
    "build": "encore production --progress",
    "ttag:po2json": "cd translations; for i in $(find . -name \"*.po\"); do ttag po2json $i > ../public/locales/$i.json; done; cd ..",
    "ttag:extract": "ttag extract $(find assets -name '*.ts' -or -name '*.tsx' | sort) -o translations/translations.pot"
  }
}
